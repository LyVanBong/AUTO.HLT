//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AUTOHLT.WEB.API.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bsoft_autohltEntities : DbContext
    {
        public bsoft_autohltEntities()
            : base("name=bsoft_autohltEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int AddNotification(string content, Nullable<System.Guid> id_send, Nullable<System.Guid> id_receive, Nullable<int> noti_Type, Nullable<System.DateTime> date)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var id_sendParameter = id_send.HasValue ?
                new ObjectParameter("Id_send", id_send) :
                new ObjectParameter("Id_send", typeof(System.Guid));
    
            var id_receiveParameter = id_receive.HasValue ?
                new ObjectParameter("Id_receive", id_receive) :
                new ObjectParameter("Id_receive", typeof(System.Guid));
    
            var noti_TypeParameter = noti_Type.HasValue ?
                new ObjectParameter("Noti_Type", noti_Type) :
                new ObjectParameter("Noti_Type", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNotification", contentParameter, id_sendParameter, id_receiveParameter, noti_TypeParameter, dateParameter);
        }
    
        public virtual int AddProductType(string productName, Nullable<int> price, Nullable<int> endDate, string content, Nullable<int> number)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProductType", productNameParameter, priceParameter, endDateParameter, contentParameter, numberParameter);
        }
    
        public virtual int AddServiceUseHistory(Nullable<System.Guid> id_ProType, string content, Nullable<System.Guid> id_User, Nullable<int> number, Nullable<System.DateTime> date)
        {
            var id_ProTypeParameter = id_ProType.HasValue ?
                new ObjectParameter("Id_ProType", id_ProType) :
                new ObjectParameter("Id_ProType", typeof(System.Guid));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var id_UserParameter = id_User.HasValue ?
                new ObjectParameter("Id_User", id_User) :
                new ObjectParameter("Id_User", typeof(System.Guid));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddServiceUseHistory", id_ProTypeParameter, contentParameter, id_UserParameter, numberParameter, dateParameter);
        }
    
        public virtual int AddTransferMoney(Nullable<double> discount, Nullable<int> price, Nullable<System.Guid> id_send, Nullable<System.Guid> id_receive, Nullable<int> transferType)
        {
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(double));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var id_sendParameter = id_send.HasValue ?
                new ObjectParameter("Id_send", id_send) :
                new ObjectParameter("Id_send", typeof(System.Guid));
    
            var id_receiveParameter = id_receive.HasValue ?
                new ObjectParameter("Id_receive", id_receive) :
                new ObjectParameter("Id_receive", typeof(System.Guid));
    
            var transferTypeParameter = transferType.HasValue ?
                new ObjectParameter("TransferType", transferType) :
                new ObjectParameter("TransferType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTransferMoney", discountParameter, priceParameter, id_sendParameter, id_receiveParameter, transferTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> CheckUserName(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("CheckUserName", usernameParameter);
        }
    
        public virtual int DeleteProductType(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProductType", idParameter);
        }
    
        public virtual int DeleteRegisterProduct(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRegisterProduct", idParameter);
        }
    
        public virtual int DeleteUser(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", userNameParameter);
        }
    
        public virtual ObjectResult<GetAllHistoryUserSevice_Result> GetAllHistoryUserSevice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllHistoryUserSevice_Result>("GetAllHistoryUserSevice");
        }
    
        public virtual ObjectResult<GetAllProductType_Result> GetAllProductType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProductType_Result>("GetAllProductType");
        }
    
        public virtual ObjectResult<GetAllTransferMoney_Result> GetAllTransferMoney()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTransferMoney_Result>("GetAllTransferMoney");
        }
    
        public virtual ObjectResult<GetAllUser_Result> GetAllUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUser_Result>("GetAllUser");
        }
    
        public virtual ObjectResult<GetHistoryService_Result> GetHistoryService(Nullable<System.Guid> id_user)
        {
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("Id_user", id_user) :
                new ObjectParameter("Id_user", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHistoryService_Result>("GetHistoryService", id_userParameter);
        }
    
        public virtual ObjectResult<GetNotificationUser_Result> GetNotificationUser(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotificationUser_Result>("GetNotificationUser", idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetPriceUser(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetPriceUser", userNameParameter);
        }
    
        public virtual ObjectResult<ListRegisterProduct_Result> ListRegisterProduct(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListRegisterProduct_Result>("ListRegisterProduct", idParameter);
        }
    
        public virtual ObjectResult<NotificationDetail_Result> NotificationDetail(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NotificationDetail_Result>("NotificationDetail", idParameter);
        }
    
        public virtual int RegisterProduct(Nullable<System.Guid> id_product, Nullable<System.Guid> id_User)
        {
            var id_productParameter = id_product.HasValue ?
                new ObjectParameter("Id_product", id_product) :
                new ObjectParameter("Id_product", typeof(System.Guid));
    
            var id_UserParameter = id_User.HasValue ?
                new ObjectParameter("Id_User", id_User) :
                new ObjectParameter("Id_User", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegisterProduct", id_productParameter, id_UserParameter);
        }
    
        public virtual int RegistrationAccount(string userName, string password, string name, string numberPhone, string email, Nullable<int> sex, string age, Nullable<System.DateTime> dateCreate)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var numberPhoneParameter = numberPhone != null ?
                new ObjectParameter("NumberPhone", numberPhone) :
                new ObjectParameter("NumberPhone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrationAccount", userNameParameter, passwordParameter, nameParameter, numberPhoneParameter, emailParameter, sexParameter, ageParameter, dateCreateParameter);
        }
    
        public virtual int UpdateProductType(Nullable<System.Guid> id, string producName, Nullable<int> price, Nullable<int> endDate, string content, Nullable<int> number)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            var producNameParameter = producName != null ?
                new ObjectParameter("ProducName", producName) :
                new ObjectParameter("ProducName", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProductType", idParameter, producNameParameter, priceParameter, endDateParameter, contentParameter, numberParameter);
        }
    
        public virtual int UpdateReadNotification(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReadNotification", idParameter);
        }
    
        public virtual int UpdateUser(string userName, string password, string name, string numberPhone, string email, Nullable<int> sex, Nullable<int> role, Nullable<bool> isActive, string age, Nullable<decimal> price, string idDevice)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var numberPhoneParameter = numberPhone != null ?
                new ObjectParameter("NumberPhone", numberPhone) :
                new ObjectParameter("NumberPhone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var idDeviceParameter = idDevice != null ?
                new ObjectParameter("IdDevice", idDevice) :
                new ObjectParameter("IdDevice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", userNameParameter, passwordParameter, nameParameter, numberPhoneParameter, emailParameter, sexParameter, roleParameter, isActiveParameter, ageParameter, priceParameter, idDeviceParameter);
        }
    
        public virtual ObjectResult<UserInformation_Result> UserInformation(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserInformation_Result>("UserInformation", userNameParameter, passwordParameter);
        }
    
        public virtual int UserTransfers(Nullable<System.Guid> iD_Send, Nullable<System.Guid> iD_Receive, Nullable<decimal> price)
        {
            var iD_SendParameter = iD_Send.HasValue ?
                new ObjectParameter("ID_Send", iD_Send) :
                new ObjectParameter("ID_Send", typeof(System.Guid));
    
            var iD_ReceiveParameter = iD_Receive.HasValue ?
                new ObjectParameter("ID_Receive", iD_Receive) :
                new ObjectParameter("ID_Receive", typeof(System.Guid));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserTransfers", iD_SendParameter, iD_ReceiveParameter, priceParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SetMoneyUser(string userName, Nullable<decimal> price)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetMoneyUser", userNameParameter, priceParameter);
        }
    
        public virtual ObjectResult<string> CheckNumberPhone(string numberPhone)
        {
            var numberPhoneParameter = numberPhone != null ?
                new ObjectParameter("NumberPhone", numberPhone) :
                new ObjectParameter("NumberPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CheckNumberPhone", numberPhoneParameter);
        }
    
        public virtual ObjectResult<string> GetVersionApp(Nullable<int> idVersion)
        {
            var idVersionParameter = idVersion.HasValue ?
                new ObjectParameter("IdVersion", idVersion) :
                new ObjectParameter("IdVersion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetVersionApp", idVersionParameter);
        }
    
        public virtual int UpdateAppVersion(string versionApp, Nullable<int> id)
        {
            var versionAppParameter = versionApp != null ?
                new ObjectParameter("VersionApp", versionApp) :
                new ObjectParameter("VersionApp", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAppVersion", versionAppParameter, idParameter);
        }
    
        public virtual int DeleteUserFacebook(string uID)
        {
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUserFacebook", uIDParameter);
        }
    
        public virtual ObjectResult<GetAllUserFacebook_Result> GetAllUserFacebook()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUserFacebook_Result>("GetAllUserFacebook");
        }
    
        public virtual int UpdateUserFacebook(Nullable<System.Guid> id_User, string uID, string cookie, string token, string note)
        {
            var id_UserParameter = id_User.HasValue ?
                new ObjectParameter("Id_User", id_User) :
                new ObjectParameter("Id_User", typeof(System.Guid));
    
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            var cookieParameter = cookie != null ?
                new ObjectParameter("Cookie", cookie) :
                new ObjectParameter("Cookie", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserFacebook", id_UserParameter, uIDParameter, cookieParameter, tokenParameter, noteParameter);
        }
    
        public virtual int AddUIDTypeFacebook(string uid, Nullable<int> type)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUIDTypeFacebook", uidParameter, typeParameter);
        }
    
        public virtual int DeleteIDTypeFacebook(string uid)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteIDTypeFacebook", uidParameter);
        }
    
        public virtual ObjectResult<GetAllIDTypeFacebook_Result> GetAllIDTypeFacebook()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllIDTypeFacebook_Result>("GetAllIDTypeFacebook");
        }
    
        public virtual int ThemNguoiGioiThieu(string userGioiThieu, string userDuocGioiThieu, Nullable<int> discount, string note)
        {
            var userGioiThieuParameter = userGioiThieu != null ?
                new ObjectParameter("UserGioiThieu", userGioiThieu) :
                new ObjectParameter("UserGioiThieu", typeof(string));
    
            var userDuocGioiThieuParameter = userDuocGioiThieu != null ?
                new ObjectParameter("UserDuocGioiThieu", userDuocGioiThieu) :
                new ObjectParameter("UserDuocGioiThieu", typeof(string));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemNguoiGioiThieu", userGioiThieuParameter, userDuocGioiThieuParameter, discountParameter, noteParameter);
        }
    
        public virtual ObjectResult<GetAllNguoiGioiThieu_Result> GetAllNguoiGioiThieu(string userGioiThieu)
        {
            var userGioiThieuParameter = userGioiThieu != null ?
                new ObjectParameter("UserGioiThieu", userGioiThieu) :
                new ObjectParameter("UserGioiThieu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllNguoiGioiThieu_Result>("GetAllNguoiGioiThieu", userGioiThieuParameter);
        }
    
        public virtual int AddFUIdFriendAutoLikeComment(string id, string uId)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var uIdParameter = uId != null ?
                new ObjectParameter("UId", uId) :
                new ObjectParameter("UId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddFUIdFriendAutoLikeComment", idParameter, uIdParameter);
        }
    
        public virtual int AddHistoryAutoLikeComment(string id, string uId, string name, string avatar, string typeAuto, string uId_Friend, string name_Friend, string avatar_Friend)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var uIdParameter = uId != null ?
                new ObjectParameter("UId", uId) :
                new ObjectParameter("UId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("Avatar", avatar) :
                new ObjectParameter("Avatar", typeof(string));
    
            var typeAutoParameter = typeAuto != null ?
                new ObjectParameter("TypeAuto", typeAuto) :
                new ObjectParameter("TypeAuto", typeof(string));
    
            var uId_FriendParameter = uId_Friend != null ?
                new ObjectParameter("UId_Friend", uId_Friend) :
                new ObjectParameter("UId_Friend", typeof(string));
    
            var name_FriendParameter = name_Friend != null ?
                new ObjectParameter("Name_Friend", name_Friend) :
                new ObjectParameter("Name_Friend", typeof(string));
    
            var avatar_FriendParameter = avatar_Friend != null ?
                new ObjectParameter("Avatar_Friend", avatar_Friend) :
                new ObjectParameter("Avatar_Friend", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHistoryAutoLikeComment", idParameter, uIdParameter, nameParameter, avatarParameter, typeAutoParameter, uId_FriendParameter, name_FriendParameter, avatar_FriendParameter);
        }
    
        public virtual int DeleteAutoLikeCmtAvatar(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAutoLikeCmtAvatar", idParameter);
        }
    
        public virtual int DeleteFUIdFriendAutoLikeComment(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFUIdFriendAutoLikeComment", idParameter);
        }
    
        public virtual ObjectResult<GetAllFUIdFriendAutoLikeComment_Result> GetAllFUIdFriendAutoLikeComment(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllFUIdFriendAutoLikeComment_Result>("GetAllFUIdFriendAutoLikeComment", idParameter);
        }
    
        public virtual ObjectResult<GetAllHistoryAutoLikeCommentAvatar_Result> GetAllHistoryAutoLikeCommentAvatar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllHistoryAutoLikeCommentAvatar_Result>("GetAllHistoryAutoLikeCommentAvatar");
        }
    
        public virtual ObjectResult<GetAllUserAutoLikeComment_Result> GetAllUserAutoLikeComment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUserAutoLikeComment_Result>("GetAllUserAutoLikeComment");
        }
    
        public virtual int UpdateAutoLikeCmtAvatarInfoFace(string id, string uId, string name, string picture, Nullable<bool> isRunWork)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var uIdParameter = uId != null ?
                new ObjectParameter("UId", uId) :
                new ObjectParameter("UId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            var isRunWorkParameter = isRunWork.HasValue ?
                new ObjectParameter("IsRunWork", isRunWork) :
                new ObjectParameter("IsRunWork", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAutoLikeCmtAvatarInfoFace", idParameter, uIdParameter, nameParameter, pictureParameter, isRunWorkParameter);
        }
    
        public virtual int UpdateAutoLikeCmtAvatarInfoFaceRun(string id, Nullable<bool> isRunWork)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var isRunWorkParameter = isRunWork.HasValue ?
                new ObjectParameter("IsRunWork", isRunWork) :
                new ObjectParameter("IsRunWork", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAutoLikeCmtAvatarInfoFaceRun", idParameter, isRunWorkParameter);
        }
    
        public virtual int UpdateUserAutoLikeComment(string id, Nullable<System.DateTime> registrationDate, Nullable<int> expiredTime, string f_Cookie, string f_Tooken)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var registrationDateParameter = registrationDate.HasValue ?
                new ObjectParameter("RegistrationDate", registrationDate) :
                new ObjectParameter("RegistrationDate", typeof(System.DateTime));
    
            var expiredTimeParameter = expiredTime.HasValue ?
                new ObjectParameter("ExpiredTime", expiredTime) :
                new ObjectParameter("ExpiredTime", typeof(int));
    
            var f_CookieParameter = f_Cookie != null ?
                new ObjectParameter("F_Cookie", f_Cookie) :
                new ObjectParameter("F_Cookie", typeof(string));
    
            var f_TookenParameter = f_Tooken != null ?
                new ObjectParameter("F_Tooken", f_Tooken) :
                new ObjectParameter("F_Tooken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserAutoLikeComment", idParameter, registrationDateParameter, expiredTimeParameter, f_CookieParameter, f_TookenParameter);
        }
    
        public virtual int AddHDSD(string url, string note)
        {
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHDSD", urlParameter, noteParameter);
        }
    
        public virtual int DeleteHDSD(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteHDSD", idParameter);
        }
    
        public virtual ObjectResult<GetDataHDSD_Result> GetDataHDSD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDataHDSD_Result>("GetDataHDSD");
        }
    }
}
