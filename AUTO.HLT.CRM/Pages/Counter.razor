@page "/danh-sach-nguoi-dung"
@using AUTO.HLT.CRM.Models.User
@using Newtonsoft.Json
@using RestSharp
@using System.Net

<nav class="navbar navbar-light bg-light justify-content-between">
    <a class="navbar-brand">Danh sách người dùng</a>
    <div class="input-group mb-3">
        <input class="form-control mr-sm-2" @onkeydown="SearchUser" @bind="TextSearch" placeholder="Tài khoản hoặc ID tài khoản" type="text">
        <div class="btn btn-outline-success my-2 my-sm-0" @onclick="SearchUser" type="submit">Tìm kiếm</div>
    </div>
</nav>

<div class="alert alert-primary text-lg-center" role="alert">
    Tổng số tài khoản : @_totalUser
</div>

<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Tài khoản</th>
            <th scope="col">Tên</th>
            <th scope="col">Số điện thoại</th>
            <th scope="col">Loại tài khoản</th>
            <th scope="col">Số dư</th>
        </tr>
    </thead>
    <tbody>
        @if (DataUser != null && DataUser.Any())
        {
            foreach (var item in DataUser)
            {
                <tr>
                    <th scope="row">@item.Stt</th>
                    <td>@item.UserName</td>
                    <td>@item.Name</td>
                    <td>@item.NumberPhone</td>
                    <td>@item.Role</td>
                    <td>@item.PriceExtend</td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private string TextSearch;
    private string _uriUser = "http://api.autohlt.com/api/v1/user/getalluser";
    private List<InfoUser> _dataSourceInfoUsers = new List<InfoUser>();
    private int _totalUser;

    public List<InfoUser> DataUser { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await InitData();
    }

    private void SearchUser()
    {
        if (TextSearch != null)
        {
            if (TextSearch.Length >= 36)
            {
                DataUser = _dataSourceInfoUsers.Where(x => x.ID.Contains(TextSearch)).ToList();
            }
            else
            {
                DataUser = _dataSourceInfoUsers.Where(x => x.UserName.Contains(TextSearch)).ToList();
            }
        }
    }
    private async Task InitData()
    {
        var client = new RestClient();
        client.BaseUrl = new Uri(_uriUser);
        var request = new RestRequest(Method.GET);

        var response = await client.ExecuteAsync(request);
        var html = response?.Content;
        var data = response.StatusCode == HttpStatusCode.OK
            ? JsonConvert.DeserializeObject<UserModel>(html)
            : default;
        if (data != null && data.Code > 0 && data.Data != null && data.Data.Any())
        {
            _dataSourceInfoUsers = new List<InfoUser>(data.Data.OrderByDescending(x => x.DateCreate));
            var i = 1;
            foreach (var user in _dataSourceInfoUsers)
            {
                user.Stt = i;
                i++;
            }
            DataUser = new List<InfoUser>(_dataSourceInfoUsers);
            _totalUser = i-1;
        }
    }

}
